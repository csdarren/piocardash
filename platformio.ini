; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = emulator_64bits

[env]
build_flags = 
	-D LV_CONF_SKIP
	-D LV_CONF_INCLUDE_SIMPLE
	-D LV_USE_DEMO_WIDGETS=0
    -D LV_USE_DRAW_SW_NEON=0
lib_deps = 
	lvgl@9.3
lib_archive = false

[env:emulator_64bits]
platform = native@^1.1.3
extra_scripts = 
	pre:support/sdl2_paths.py
	post:support/sdl2_build_extra.py
build_flags = 
	${env.build_flags}
	-D LV_LOG_PRINTF=1
	!python -c "import os; print(' '.join(['-I {}'.format(i[0].replace('\x5C','/')) for i in os.walk('hal/sdl2')]))"
	-lSDL2
	-D LV_LVGL_H_INCLUDE_SIMPLE
	-D LV_DRV_NO_CONF
	-D LV_USE_SDL
	-D SDL_HOR_RES=720
	-D SDL_VER_RES=720
	-D SDL_ZOOM=1
	-D LV_SDL_INCLUDE_PATH="\"SDL2/SDL.h\""
	
	-D LV_MEM_CUSTOM=1
	-D LV_MEM_SIZE="(128U * 1024U)"
lib_deps = 
	${env.lib_deps}
build_src_filter = 
	+<*>
	+<../hal/sdl2>
	+<../.pio/libdeps/emulator_64bits/lvgl/demos>

[env:emulator_32bits]
extends = env:emulator_64bits
build_flags = 
	${env:emulator_64bits.build_flags}
	-m32
build_src_filter = 
	+<*>
	+<../hal/sdl2>
	+<../.pio/libdeps/emulator_32bits/lvgl/demos>

[env:stm32f429_disco]
platform = ststm32@^8.0.0
board = disco_f429zi
framework = stm32cube
build_flags = 
	${env.build_flags}
	-D LV_LOG_LEVEL=LV_LOG_LEVEL_NONE
	-D HSE_VALUE=8000000
	!python -c "import os; print(' '.join(['-I {}'.format(i[0].replace('\x5C','/')) for i in os.walk('hal/stm32f429_disco')]))"
lib_deps = 
	${env.lib_deps}
	BSP-ili9341
	BSP-stmpe811
build_src_filter = 
	+<*>
	+<../hal/stm32f429_disco>
	+<../.pio/libdeps/stm32f429_disco/lvgl/demos>

[env:esp32_boards]
platform = espressif32
board = esp32doit-devkit-v1; check displays hpp file for recommended settings
framework = arduino
build_flags = 
	${env.build_flags}
	-D LV_LOG_LEVEL=LV_LOG_LEVEL_NONE
	!python -c "import os; print(' '.join(['-I {}'.format(i[0].replace('\x5C','/')) for i in os.walk('hal/esp32')]))"
lib_deps = 
	${env.lib_deps}
	lovyan03/LovyanGFX@^1.2.0
	smartpanle/PanelLan@^0.0.1
build_src_filter = 
	+<*>
	+<../hal/esp32>
	+<../.pio/libdeps/esp32_boards/lvgl/demos>

[env:esp32doit-devkit-v1]
platform = espressif32
board = esp32doit-devkit-v1
framework = arduino
